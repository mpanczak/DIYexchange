INSERT INTO users (id, email, login, password) VALUES (1, 'johndoe@gmail.com', 'johndoe', '$2a$10$b5qjI/WewW1JLZEPEqzx5uYkQRz7tMuVmkQzyOVenYO57nQk.Me1m'); # secret
INSERT INTO users (id, email, login, password) VALUES (2, 'qezepame@socam.me', 'mpanczak', '$2a$10$Dd3N5h3l4L9Afs9BOlPZweJplotTwc5VMUWUis1rJvfEJpKEOFcX.'); # changeit
INSERT INTO users (id, email, login, password) VALUES (3, 'zostididra@gufum.com', 'tommy', '$2a$10$Dd3N5h3l4L9Afs9BOlPZweJplotTwc5VMUWUis1rJvfEJpKEOFcX.'); # changeit
INSERT INTO users (id, email, login, password) VALUES (4, 'oiueisaterbkgn@exelica.com', 'luke', '$2a$10$Dd3N5h3l4L9Afs9BOlPZweJplotTwc5VMUWUis1rJvfEJpKEOFcX.'); # changeit
INSERT INTO users (id, email, login, password) VALUES (5, 'jack@yahoo.com', 'jack', '$2a$10$Dd3N5h3l4L9Afs9BOlPZweJplotTwc5VMUWUis1rJvfEJpKEOFcX.'); # changeit

INSERT INTO roles (id, name) VALUES (1, 'user'), (2, 'admin');

INSERT INTO roles_users (roles_id, users_id) VALUES (1, 1), (1, 2), (1, 3), (2, 1);

INSERT INTO posts (id, timestamp, user_id, title, content) VALUES (1, CURRENT_TIMESTAMP, 1, 'Generator impulsów wysokiego napięcia',' Urządzenie składa się z przetwornicy wysokiego napięcia widocznej po prawej stronie powyższego obrazka. Wykorzystana została cewka 1mH z diodą UF4007 (szybka dioda impulsowa, która była tutaj głównie do testów, ale wbrew pozorom nadaje się całkiem dobrze do tego celu). Przetwornica zależnie od zastosowanego tranzystora (STP5NK50 lub STP5NK80) oraz częstotliwości sterującej może wygenerować impuls napięcia w wysokości odpowiednio 500 lub 800 V. Impulsy zaczynają się robić bolesne już przy 300V, więc urządzenie ma spory zapas "mocy" (w znaczeniu możliwości zakresu napięciowego, gdyż maksymalny prąd wyjściowy urządzenia mieści się w zakresie mikroamperów). Sterowanie częstotliwością przetwornicy oraz sygnału wyjściowego jest izolowane galwanicznie, co nie ma większego znaczenia w przypadku zastosowania sprzężenia zwrotnego, aczkolwiek w przypadku jego braku pozwala na całkowite odcięcie urządzenia od mikrokontrolera. W przypadku używania sprzężenia zwrotnego mikrokontroler jest zabezpieczony wyłącznie diodą Zenera (D11), co w przypadku uszkodzenia zabezpieczenia może spowodować (a nawet zagwarantować) zniszczenie mikrokontrolera, stąd używanie sprzężenia zwrotnego nie jest zalecane. Wysokim napięciem sterują tranzystory MOSFET firmy STM, które są sterowane przy użyciu rezystorów podciągających 2.2k, a ich bramka za pomocą tranzystora jest zwierana do masy. W przypadku sterowania częstotliwością sygnał jest odwrócony, co automatycznie powoduje stały przepływ prądu przez cewkę w momencie braku sygnału FREQ. Z tego też powodu został zastosowany system OCP składający się z tranzystora NPN oraz rezystora wpiętego między jego bramkę a masę. Zgodnie z zastosowanym rezystorem prąd płynący przez tranzystor nie powinien przekroczyć 200-300mA (w zależności od jakości użytych komponentów). Sygnał SIG jest podwójnie odwrócony, gdyż w przypadku zastosowania pojedynczego odwrócenia (i braku sygnału SIG) tranzystor byłby cały czas otwarty, a wysoka częstotliwość pracy przetwornicy powodowałaby wysyłanie impulsów wysokiego napięcia o wysokiej częstotliwości na wyjście urządzenia, co jest bardzo nieprzyjemne (ciekawe jak autor się o tym dowiedział...) Wielki szereg diod Zenera pozwala ograniczyć maksymalne napięcie na wyjściu urządzenia, aczkolwiek jest to zabezpieczenie opcjonalne (diody mogą się przegrzewać przy dużych częstotliwościach pracy urządzenia). Kondensator C1 służy jako magazyn energii dla impulsów wychodzących z urządzenia (rezystor rozładowujący R6 jest opcjonalny), a częstotliwość pracy Q3 określa częstotliwość impulsów wychodzących. By wysłać impuls wystarczy otworzyć Q3 na kilka milisekund. System FeedBack to zwykły dzielnik napięcia zabezpieczony diodą Zenera. Wartości elementów można odczytać w tabelce w schemacie. Napięciem wyjściowym przetwornicy sterujemy za pomocą manipulowania częstotliwością PWM sygnału FREQ z wypełnieniem 50% (mikrokontroler lub układ CD4046).  Taka modulacja jest modulacją podobną do FM, aczkolwiek wolę ją określić jako PWM, by ułatwić implementację urządzenia. Domyślnie napięcie przetwornicy nie jest przekazywane na linię OUT, więc wymagane jest przekazanie jej sygnału SIG (w domyślnym zastosowaniu jest to sygnał PWM o małym wypełnieniu z regulowaną częstotliwością). Wartość początkową najlepiej obrać w okolicach 100kHz i poruszać się w dół, by uniknąć nieprzyjemnych niespodzianek.');
INSERT INTO posts (id, timestamp, user_id, title, content) VALUES (2, CURRENT_TIMESTAMP, 2, 'Wirówka laboratoryjna aka. ośmiornica', ' To urządzenie jest skrajnie niebezpieczne. Kopiowanie pomysłu wyłącznie na własną odpowiedzialność, ale dla bezpieczeństwa umieść działającą wirówkę w zamkniętym twardym pojemniku, gdyż pęknięcie mechanizmu jest porównywalne do wystrzelenia pocisku z karabinu. Streszczenie: Ostatnio zajmuję się hobbystycznie chemią i do eksperymentu potrzebuję lecytyny... Najłatwiej (w domowych warunkach) jest ją pozyskać z jajka przy użyciu benzyny aptecznej, denaturatu i acetonu. Niestety rozdzielanie cieczy i ciała stałego metodą grawitacyjną trwa całą wieczność, a i tak zawsze jakaś część cieczy pozostanie w osadzie. Stąd powstał zamysł zrobienia wirówki... Koszt takiego urządzenia w wersji sklepowej (o mocy 1000G) to ok. 400-600 zł. Jak za to się zabrać... Pomysł już jest, teraz tylko realizacja. Na początku potrzebny był krążek, do którego wkładane będą probówki (bo te już miałem, kupiłem 500 szt za jakieś 50,- na pewnej platformie sprzedażowej).');
INSERT INTO posts (id, timestamp, user_id, title, content) VALUES (3, CURRENT_TIMESTAMP, 3, ' MAB Robotics i robot kroczący Honey Badger ', 'MAB Robotics założyliśmy z myślą o komercjalizacji technologii robotów mobilnych i technologii napędowych dla robotyki w 2019. Sam pomysł i prace nad budową robotów kroczących rozpoczęliśmy już w trakcie studiów na Politechnice Poznańskiej gdy byliśmy członkami koła naukowego KN Mechatron. Pierwszy prototyp robota pokazał, że tego typu konstrukcje, w niektórych warunkach mają lepsze możliwości ruchowe niż dotychczas najpopularniejsze na lądzie roboty jeżdżące. Z pomocą dr inż. Krzysztofa Walasa (wykładowcy robotyki na Politechnice Poznańskiej), zdobyliśmy finansowanie z Akademickiego Inkubatora PP i w efekcie w 2019 roku powstała spółka MAB Robotics. Rok później zainwestował w nas fundusz inwestycyjny YouNick Mint co pozwoliło na przejście ze studenckiego projektu w firmę zajmującą się zaawansowanymi pracami badawczo rozwojowymi w obszarze robotyki i rozpoczęcie działań związanych z komercjalizacją opracowanych technologii. Dużą motywacją do działań był udział i nagrody jakie zdobywaliśmy w zawodach robotycznych w Polsce i za granicą - głównie w kategorii freestyle. Z naszymi robotami byliśmy m.in. na RoboticArena we Wrocławiu, Trójmiejskim Turnieju Robotów w Gdańsku, Sumo Challenge w Łodzi, Robomaticon w Warszawie, ROBOCOMP w Krakowie czy Robot Challenge w Pekinie. Niemal wszędzie zdobywaliśmy nagrody, zawsze poznawaliśmy ciekawych ludzi i gromadziliśmy bezcenne doświadczenie. Dziś pracujemy nad systemem inspekcyjnym, którego jedną z części jest robot Honey Badger. System rozwijany jest z myślą o prowadzeniu prac inspekcyjnychi serwisowych wewnątrz podziemnych sieci jakie występują pod ulicami każdego miasta. Obecnie wykorzystywane technologie, oparte najczęściej o jeżdżące platformy nie pozwalają dostać się wszędzie, mają stosunkowo niewielki zasięg i są drogie w użyciu. Dzięki przejściu z kół na nogi roboty MAB Robotics będą w stanie wejść niemal w każde miejsce, niosąc na grzbiecie sensory analizujące stan techniczny instalacji oraz narzędzia umożliwiające wykonywanie drobnych prac naprawczych od wewnątrz - pozwala to ograniczyć wykopy i prace drogowe w na ulicach miast.');
INSERT INTO posts (id, timestamp, user_id, title, content) VALUES (4, CURRENT_TIMESTAMP, 4, 'Monitoring kotła grzewczego via WiFi / CAN', ' Cześć, Swoją przygodę z PCB zacząłem od monitora starego kotła a potem mostu WiFi na 433 MHz, który jest opisany w innym temacie na forum. Potem był licznik energii, którego akurat na forum nie wrzucałem. Tym razem chciałbym pochwalić się innym projektem, który wyewoluował z wspomnianego na początku monitora starego pieca, który docelowo wymieniliśmy na kocioł na pellet. Wcześniejsza płytka, oparta na esp8266 pozwalała na monitorowanie temperatury na piecu oraz wyłączaniu bądź włączaniu pompki obiegowej. Kocioł został wymieniony, zgodnie z nadchodzącymi wymaganiami dotyczącymi smogu. Nie chciałem jednak tracić możliwości zdalnego podglądu... PelletMon - zdalne monitorowanie kotła Projekt nie powiem, był pójściem na żywioł. Kocioł posiada wyprowadzenia magistrali CAN a o ramkach danych i ich strukturze nie było wiadomo kompletnie nic. Początkowe testowanie magistrali CAN spowodowało kilka małych awarii kotła, co jak się okazało, wynikało ze złej terminacji (moduły testowe na płytce stykowej). Na szczęście awarie znikały po restarcie kotła. Sporo czasu zajęło mi dojście do tego, co jest przesyłane w ramkach. Napisałem własny sniffer magistrali, który przesyłał po serial porcie dane interpretowane przez program CAN-Monitor-3000. W ten sposób udało się wyłapać niektóre wartości, jednak z temperaturami miałem mały problem. Nie chciałem przecież czekać w kotłowni cały dzień, by poznać wartości dla skrajnych temperatur. Wpadłem na pomysł - bardzo ryzykowny - podstawienia własnej ramki z różnymi wartościami. Tak udało się zbudować tabelę interesujących wartości a na ich podstawie aproksymację funkcji - tutaj z pomocą przyszedł program CurveExpert. ');
INSERT INTO posts (id, timestamp, user_id, title, content) VALUES (5, CURRENT_TIMESTAMP, 5, 'MacintoshPi - Mac OS 7, 8 i 9 oraz Commodore dla Raspberry Pi', 'MacintoshPi to mój mały projekt pozwalający na uruchomienie pełnoekranowych systemów Apple: Mac OS 7, Mac OS 8 i Mac OS 9 z dźwiękiem, aktywnym połączeniem internetowym i emulacją modemu pod Raspberry Pi OS Lite. Wszystko bez menadżera X.org, a wyłącznie za pomocą multimedialnej biblioteki SDL2 i z poziomu CLI – Raspberry Pi OS Lite. Dzięki temu emulatory wykorzystują pełną moc Raspberry Pi, są stabilniejsze i użyteczne w połączeniu z dodatkowym retro-oprogramowaniem. Instalacja wymaga uruchomienia jednego skryptu na czystym systemie Raspberry Pi OS Lite i poczekania około dwóch godzin na kompilację i instalację pakietów. Dodatkowo, dzięki zawartemu w projekcie dokumentowi, w dual-boot możliwe jest umieszczenie najszybszego (bare-metal) emulatora Commodore 64/128/PET BMC64 budując w ten sposób ciekawy retro pakiet na jednej karcie SD. Cały projekt MacintoshPi działa z urządzeniami Raspberry Pi Zero 2W, 2, 3, 3B, 3B+ (na razie nie działa z wersją 4). Popularny post Napisano Lipiec 3, 2022 (edytowany) MacintoshPi to mój mały projekt pozwalający na uruchomienie pełnoekranowych systemów Apple: Mac OS 7, Mac OS 8 i Mac OS 9 z dźwiękiem, aktywnym połączeniem internetowym i emulacją modemu pod Raspberry Pi OS Lite. Wszystko bez menadżera X.org, a wyłącznie za pomocą multimedialnej biblioteki SDL2 i z poziomu CLI – Raspberry Pi OS Lite. Dzięki temu emulatory wykorzystują pełną moc Raspberry Pi, są stabilniejsze i użyteczne w połączeniu z dodatkowym retro-oprogramowaniem. Instalacja wymaga uruchomienia jednego skryptu na czystym systemie Raspberry Pi OS Lite i poczekania około dwóch godzin na kompilację i instalację pakietów. Dodatkowo, dzięki zawartemu w projekcie dokumentowi, w dual-boot możliwe jest umieszczenie najszybszego (bare-metal) emulatora Commodore 64/128/PET BMC64 budując w ten sposób ciekawy retro pakiet na jednej karcie SD. Cały projekt MacintoshPi działa z urządzeniami Raspberry Pi Zero 2W, 2, 3, 3B, 3B+ (na razie nie działa z wersją 4). Poniżej film przedstawiający możliwości projektu MacintoshPi: Istnieje system Mac OS 7 dla maliny, ale do tej pory system Mac OS 9 w pełnoekranowym trybie (bez zbędnego menadżera okien - dla Raspberry Pi OS Lite) nie był dostępny. To chyba pierwsza taka implementacja pozwalająca na korzystanie z Mac OS 9 i SDL2 w trybie pełnoekranowym, z dźwiękiem i połączeniem internetowym – nawet na małym Raspberry Pi 2 W (a działa również na Raspbery Pi 2). Zajmuję się tematem emulacji Mac OS kilka lat (bo bardzo lubię retro systemy Apple''a) i temat jest dość złożony (gdyby zaczynać wszystko od początku): problemy z konfiguracją obrazów systemów pod obsługę Internetu, z właściwymi konfigami do emulatorów, z właściwymi opcjami do kompilacji emulatorów oraz (oddzielnie) SDL2 (bo oczywiście SDL z paczki nie zadziała w emulacji), z właściwą kompilacją NetDrivera, z wersjami bibliotek (bo muszą być legacy), problemy z dźwiękiem itp. itd. Oczywiście mówię o problemach, które napotkają początkujący, po czym zniechęcą się i rzucą te emulatory w kąt. Ponieważ rozwiązałem te wszystkie problemy na swoim Raspberry-Macintoshu, to postanowiłem udostępnić to rozwiązanie dla Wszystkich, tak żeby wystarczyło odpalić jeden skrypt i otrzymać wszystkie trzy systemy w jednym pakiecie bez żadnego wysiłku - i tym właśnie jest ten mały projekt. ');
INSERT INTO posts (id, timestamp, user_id, title, content) VALUES (6, CURRENT_TIMESTAMP, 1, 'LEDnode - zegarek w steampunkowym stylu', 'Cześć! Zegarek dostał sporo lajków na steampunkowej grupie na FB, jest też kilku chętnych na układ więc przerzucam go dalej. Poza samym pokazywaniem godziny został wyposażony także w chronograf, oraz czujnik warunków atmosferycznych(Bosch sensortec)- barometr, higrometr i pomiar temperatury. Ze wzoru barometrycznego liczona jest także wysokość, za podstawę przyjmując ustawialne ciśnienie referencyjne(ciśnienie na poziomie morza). Altimetr jest na tyle precyzyjny, że spróbowałem za jego pomocą zmierzyć swój wzrost- błąd wynosił 15cm. Enkoder umożliwia przewijanie wartości, zmianę ustawień. Poza nim znajduje się także przycisk wstecz, oraz przełącznik umożliwiający ustawienie trybu "force" w którym wyświetlacz świeci się non stop. Wyświetlacz to standardowy 7 segmentowy LED 0,28"- tutaj czerwony, w finalnej wersji planuję bursztynowy bądź niebieski. System podtrzymywania czasu zapisuje aktualny czas w pamięci flash gdy bateria zostaje wyciągnięta, a w najnowszym prototypie dodatkowo supercap podtrzymuje pracę zegarka przez ok 90 sekund, które w zupełności wystarczą na włożenie nowej baterii/naładowanego akumulatora. Sercem zegarka jest 32-bitowy mikrokontroler z najnowszej serii od ST, wyposażony w rdzeń Cortex-M0+. Oprogramowanie jak również projekt płytki PCB własny. Klatka została wykonana z miedzianego drutu 2.5mm^2, lutowanego cyną bezołowiową Pasek to standardowa skórzana pieszczocha szerokości 50mm firmy której nazwy nie wymienię, bo pieszczocha okazała się gównianej jakości i kwalifikuje się do wymiany. A niestety nie była tania. Urządzenie na zdjęciach jest dopiero prototypem, pracuję nad finalną wersją. ');

# INSERT INTO pictures (id, post_id, name, image_data) VALUES (1, 1, 'picture.jpg', LOAD_FILE('/tmp/diybuddy.jpg'));
# INSERT INTO pictures (id, post_id, name, image_data) VALUES (2, 2, 'picture2.jpg', LOAD_FILE('/tmp/diybuddy.jpg'));


INSERT INTO comments (id, post_id, timestamp, user_id, content) VALUES (1, 1, CURRENT_TIMESTAMP, 2, 'Super projekt!');
INSERT INTO comments (id, post_id, timestamp, user_id, content) VALUES (2, 4, CURRENT_TIMESTAMP, 1, 'Słabe to było');
INSERT INTO comments (id, post_id, timestamp, user_id, content) VALUES (3, 4, CURRENT_TIMESTAMP, 2, 'Nieźle nieźle');
INSERT INTO comments (id, post_id, timestamp, user_id, content) VALUES (4, 4, CURRENT_TIMESTAMP, 3, 'Dosasz listę elementów, których użyłeś?');
INSERT INTO comments (id, post_id, timestamp, user_id, content) VALUES (5, 2, CURRENT_TIMESTAMP, 4, 'Robiłem kiedyś coś podobnego i ..');
INSERT INTO comments (id, post_id, timestamp, user_id, content) VALUES (6, 1, CURRENT_TIMESTAMP, 3, 'Na rynku jest problem z elementami tego typu.');

INSERT INTO posts_liked_by_users (liked_by_users_id, liked_posts_id) VALUES (2, 1), (1, 3), (3, 2), (4, 2), (4, 1), (1, 4);

INSERT INTO user_follows (followed_id, follower_id) VALUES (1, 2), (1, 3), (1, 4);
INSERT INTO user_follows (followed_id, follower_id) VALUES (2, 1), (2, 3), (2, 5);
INSERT INTO user_follows (followed_id, follower_id) VALUES (5, 4), (5, 1), (5, 3);


INSERT INTO elements (id, post_id, name, type, quantity) VALUES (1, 1, 'arduino', 'uno', 1);
INSERT INTO elements (id, post_id, name, type, quantity)  VALUES (2, 1, 'connecting cables', null, 15);
INSERT INTO elements (id, post_id, name, type, quantity)  VALUES (3, 1, 'transistor', 'BC 337', 3);
INSERT INTO elements (id, post_id, name, type, quantity)  VALUES (4, 1, 'resistor 20 Ohm', null, 2);
INSERT INTO elements (id, post_id, name, type, quantity)  VALUES (5, 1, 'contact board', null, 2);
